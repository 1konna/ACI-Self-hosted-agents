trigger: none

# We need to rely on a hosted agent from Microsoft to build and deploy our container agent for the first time.
# Please note that we'll be needing a Windows/Linux agent to match the corrosponding container image source. Otherwise the build will fail.
pool:
  vmimage: 'windows-2019'

# Only change and fill in the parameters below:
variables:
  # URL to your Azure DevOps Organization and name of the agent pool. You'll need to create the agent pool yourself first.
  azdUrl: 'https://dev.azure.com/<ORGANIZATION NAME>/'
  agentPool: 'Self-hosted-ACI-Windows-dotNet'
  # Name of Key Vault where secrets are stored for the Azure Container Registry credentials and its proper URL.
  azureSubscription: '<NAME OF AZURE DEVOPS SERVICE ENDPOINT FOR AZURE DEPLOYMENT>'
  resourceGroupName: '<RESOURCE GROUP TO DEPLOY TO>'
  keyVaultName: '<KEY VAULT NAME>'
  registryUsername: '<NAME OF AZURE CONTAINER REGISTRY>'
  registryLoginServer: '<URL OF ACR i.e. adsharegistry.azurecr.io>'
  registryImageUri: '$(registryLoginServer)/$(containerRepository):$(Build.BuildId)'
  # Name of the Azure Container Instance name.
    containerInstanceName: 'windowsagent'
  # Name of the repository in which to store the container image inside the Azure Container Registry.
  containerRepository: 'adsha-windowsservercore'

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# =-=                                               DON't CHANGE ANYTHING BELOW THIS LINE!!                                                     =-=
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

steps:
# This taks will run a Powershell script to retrieve the credentials for ACR and PAT for Azure DevOps.
- task: AzureKeyVault@1
  displayName: 'Get secrets from Key Vault'
  inputs:
    azureSubscription: $(azureSubscription)
    KeyVaultName: $(keyVaultName)
    SecretsFilter: 'RegistryPassword1, RegistryPassword2, patTokenManageAgent'

# This task will perform a Docker build and Docker push.
# The container image will be build the container image based on the 'containerRepository' value supplied above and pushes it towards ACR.
- task: PowerShell@2
  displayName: 'Build and push Docker image'
  inputs:
    targetType: 'inline'
    script: |
      docker login $(registryLoginServer) --username $(registryUsername) --password $(RegistryPassword1) 
      docker build $(containerRepository) -t $(registryImageUri)
      docker images
      docker push $(registryImageUri)

# Lastly the Azure Container Instance will be deployed. All parameters are overriden except one!
# Since we don't want to insert and pass on the Azure Key Vault secrets in this task, you need to modify 
# the paramters JSON and correct the two Azure Key Vault references inside.
- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'Deploy Container Instance'
  inputs:
    deploymentScope: 'Resource Group'
    ConnectedServiceName: 'DevOpsTeam-App-S'
    subscriptionName: '7b1ba02e-bac6-4c45-83a0-7f0d3104922e'
    action: 'Create Or Update Resource Group'
    resourceGroupName: $(resourceGroupName)
    location: 'West Europe'
    templateLocation: 'Linked artifact'
    csmFile: 'adsha-windowsservercore/ACI_DevOps_Agent_template.json'
    csmParametersFile: 'adsha-windowsservercore/ACI_DevOps_Agent_parameters.json'
    overrideParameters: '-containerInstanceName $(containerInstanceName) -azdUrl $(azdUrl) -patToken $(patTokenManageAgent) -agentPool $(agentPool) -registryLoginServer $(registryLoginServer) -registryImageUri $(registryImageUri) -registryUserName $(registryUsername) -registryPassword $(RegistryPassword1)'
    deploymentMode: 'Incremental'
